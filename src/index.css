/* src/index.css */

/* Import CSS variables first */
@import './styles/variables.css';

/* NO Tailwind imports needed */
/* @import "tailwindcss"; */
/* @import "tw-animate-css"; */

/* NO Tailwind custom variant needed */
/* @custom-variant dark (&:is(.dark *)); */

/*-----------------------------------------------------------------------------*/
/* Reset & Base Styles                                                       */
/*-----------------------------------------------------------------------------*/

*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border-color: var(--border-color);
    /* Default border color from variables */
    border-style: solid;
    /* Default border style */
    border-width: 0;
    /* Default border width to 0 */
}

html {
    /* Smooth scrolling */
    scroll-behavior: smooth;
    /* Prevent layout shifts due to scrollbars */
    overflow-y: scroll;
}

:root {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    line-height: 1.6;
    font-weight: 400;
    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    color-scheme: light dark;
    /* Inform browser about theme support */
    color: var(--text-color-primary);
    background-color: var(--background-color);

    /* Keep shadcn/ui compatible CSS variables - they are standard CSS */
    /* These are set based on your variables.css */
    --radius: 0.5rem;
    --background: var(--background-color);
    --foreground: var(--text-color-primary);
    --card: var(--background-color-secondary);
    --card-foreground: var(--text-color-primary);
    --popover: var(--background-color-secondary);
    --popover-foreground: var(--text-color-primary);
    --primary: var(--accent-color);
    --primary-foreground: white;
    /* Assuming white text on primary */
    --secondary: var(--background-color-secondary);
    --secondary-foreground: var(--text-color-primary);
    --muted: var(--border-color-light);
    --muted-foreground: var(--text-color-secondary);
    --accent: var(--accent-color);
    --accent-foreground: white;
    /* Assuming white text on accent */
    --destructive: var(--danger-color);
    --destructive-foreground: white;
    /* Assuming white text on destructive */
    --border: var(--border-color);
    --input: var(--border-color);
    --ring: var(--accent-color);
    /* Focus ring color */
    /* chart colors are optional */
    /* ... */
}

/* Dark mode overrides for shadcn/ui variables if needed directly */
/* This relies on variables.css setting the base colors via prefers-color-scheme */
@media (prefers-color-scheme: dark) {
    :root {
        /* Update shadcn variables if they differ significantly from base dark theme */
        --background: var(--background-color);
        --foreground: var(--text-color-primary);
        --card: var(--background-color-secondary);
        --card-foreground: var(--text-color-primary);
        --popover: var(--background-color-secondary);
        --popover-foreground: var(--text-color-primary);
        --primary: var(--accent-color);
        --primary-foreground: #111827;
        /* Dark text on lighter primary */
        --secondary: var(--background-color-secondary);
        --secondary-foreground: var(--text-color-primary);
        --muted: var(--border-color-light);
        --muted-foreground: var(--text-color-secondary);
        --accent: var(--accent-color);
        --accent-foreground: #111827;
        /* Dark text on lighter accent */
        --destructive: var(--danger-color);
        --destructive-foreground: white;
        --border: var(--border-color);
        --input: var(--border-color);
        --ring: var(--accent-color);
    }
}


body {
    min-width: 320px;
    min-height: 100vh;
    font-size: 16px;
    display: flex;
    flex-direction: column;
    background-color: var(--background-color);
    /* Apply theme background */
}

/*-----------------------------------------------------------------------------*/
/* Typography & Links                                                        */
/*-----------------------------------------------------------------------------*/

h1,
h2,
h3,
h4,
h5,
h6 {
    margin-bottom: 0.75em;
    line-height: 1.3;
    font-weight: 600;
    color: var(--text-color-primary);
}

/* Using clamp for responsive headings */
h1 {
    font-size: clamp(1.8rem, 1.521rem + 1.19vw, 2.2rem);
}

h2 {
    font-size: clamp(1.5rem, 1.321rem + 0.76vw, 1.8rem);
}

h3 {
    font-size: clamp(1.2rem, 1.111rem + 0.38vw, 1.4rem);
}

h4 {
    font-size: 1.1em;
}

p {
    margin-bottom: 1em;
    color: var(--text-color-secondary);
    max-width: 70ch;
    /* Improve readability by limiting line length */
}

a {
    font-weight: 500;
    color: var(--accent-color);
    text-decoration: none;
    transition: color 0.2s ease;
}

a:hover {
    color: var(--accent-color-light);
    text-decoration: underline;
}

/*-----------------------------------------------------------------------------*/
/* Forms & Buttons (Basic Fallbacks - Components Provide Specific Styles)   */
/*-----------------------------------------------------------------------------*/

button {
    cursor: pointer;
    font-family: inherit;
    padding: 0.6em 1.2em;
    /* Basic padding */
    font-size: 1em;
    font-weight: 500;
    border-radius: var(--border-radius);
    border: 1px solid transparent;
    transition: background-color 0.2s, border-color 0.2s, opacity 0.2s;
}

button:disabled {
    cursor: not-allowed;
    opacity: var(--disabled-opacity);
}

button:focus-visible {
    /* Use focus-visible for accessibility */
    outline: 2px solid var(--ring);
    outline-offset: 2px;
}


input,
select,
textarea {
    font-family: inherit;
    font-size: 1em;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    padding: 0.75em 1em;
    /* Slightly more vertical padding */
    background-color: var(--background-color);
    color: var(--text-color-primary);
    transition: border-color 0.2s, box-shadow 0.2s;
    width: 100%;
    /* Default to full width in forms */
    box-sizing: border-box;
    /* Include padding/border in width */
}

input::placeholder,
textarea::placeholder {
    color: var(--text-color-secondary);
    opacity: 0.6;
}

input:focus,
select:focus,
textarea:focus {
    border-color: var(--accent-color);
    outline: none;
    /* Subtle focus ring using theme variable */
    box-shadow: 0 0 0 3px color-mix(in srgb, var(--ring) 20%, transparent);
}

input:disabled,
select:disabled,
textarea:disabled {
    background-color: var(--disabled-bg);
    opacity: var(--disabled-opacity);
    cursor: not-allowed;
}

/*-----------------------------------------------------------------------------*/
/* Base Layout                                                              */
/*-----------------------------------------------------------------------------*/

#root {
    max-width: 1280px;
    /* Content max width */
    margin: 0 auto;
    /* Center content */
    padding: 0 1rem;
    /* Horizontal padding */
    flex-grow: 1;
    width: 100%;
    display: flex;
    flex-direction: column;
}

main {
    padding-top: 1.5rem;
    /* Space below sticky header */
    padding-bottom: 3rem;
    /* Space above potential footer */
    flex-grow: 1;
    /* Allow main to fill vertical space */
}


/*-----------------------------------------------------------------------------*/
/* Remove Old/Vite Default Styles                                           */
/*-----------------------------------------------------------------------------*/

/* Explicitly reset any styles potentially added by the default template */
.logo,
.logo:hover,
.logo.react:hover,
.card,
.read-the-docs {
    all: unset;
    /* Reset all properties */
    display: none;
    /* Hide them if they linger */
}

@keyframes logo-spin {
    /* Remove definition */
}

/* Reset animation specifically if needed */
@media (prefers-reduced-motion: no-preference) {
    a:nth-of-type(2) .logo {
        animation: none;
    }
}

/* NO Tailwind @layer base needed */
/* @layer base { ... } */